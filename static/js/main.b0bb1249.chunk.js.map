{"version":3,"sources":["Components/ContactsForm/ContactsForm.styled.jsx","Components/ContactsForm/ContactsForm.jsx","Components/Filter/Filter.styled.jsx","Components/Filter/Filter.jsx","Components/ContactsList/ContactsList.styled.jsx","Components/ContactsList/ContactsList.jsx","Components/App.jsx","index.js"],"names":["MyForm","styled","form","ContactsForm","onHandleSubmit","useState","name","setName","number","setNumber","change","e","target","value","reset","onSubmit","preventDefault","onChange","type","placeholder","pattern","title","required","MyLabel","label","Filter","filtered","MyList","ul","ContactsList","contacts","deleteContact","map","id","className","onClick","App","JSON","parse","window","localStorage","getItem","data","setContacts","filter","setFilter","useEffect","setItem","stringify","addContact","uuidv4","find","contact","toLowerCase","alert","prevContacts","prev","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b0bb1249.chunk.js","sourcesContent":["import styled from '@emotion/styled';\nexport const MyForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n    margin-right: auto;\n  width: 310px;\n  height: 250px;\n  border: 2px solid darkgrey;\n  border-radius: 5px;\n  padding: 15px;\n  background-color: snow;\n\n label{\n\n\n  display: flex;\n  flex-direction: column;\n  font-size: 18px;\n  font-weight: 600;\n  line-height: 1.18;\n}\ninput{\n  padding: 10px;\n  border: 2px solid #00e45f;\n  border-radius: 15px;\n  font-size: 18px;\n  font-weight: 500;\n  width: 250px;\n  font-size: 14px;\n  margin-top: 10px;\n  margin-bottom: 20px;\n}\n  button{\n    \n    margin-left: auto;\n    margin-right: auto;\n  font-size: 16px;\n  width: 150px;\n  padding: 4px;\n  border: 2px solid darkgrey;\n  border-radius: 4px;\n  background-color: darkgrey;\n  margin-top: 20px;\n  cursor: pointer;\n}\n`\n\n\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { MyForm } from \"./ContactsForm.styled\";\n\nexport default function ContactsForm({ onHandleSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const change = (e) => {\n    const { name, value } = e.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const submit = (e) => {\n    e.preventDefault();\n    onHandleSubmit({ name, number });\n    reset();\n  };\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n  return (\n    <MyForm onSubmit={submit}>\n      <label>\n        Name\n        <input\n          onChange={change}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"Enter your name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n        Number\n      </label>\n      <input\n        onChange={change}\n        placeholder=\"Enter your phone number\"\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n      />\n      <button type=\"submit\">Add contact</button>\n    </MyForm>\n  );\n}\n\nContactsForm.propTypes = {\n  onHandleSubmit: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\nexport const MyLabel = styled.label`\n\n  display: flex;\n  flex-direction: column;\n  font-family: \"Arial\";\n  font-weight: 700;\n  font-size: 15px;\n  line-height: 1.14;\n  margin-top: 15px;\n  margin-left: 20px;\n\n    input{\n      \n  width: 300px;\n  border: 4px solid #00ffe5;\n  border-radius: 15px ;\n\n  padding: 8px;\n  margin-top: 8px;\n}\n`","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { MyLabel } from \"./Filter.styled\";\n\nconst Filter = ({ filtered, value }) => {\n  return (\n    <MyLabel>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={(e) => filtered(e)}\n      />\n    </MyLabel>\n  );\n};\n\nFilter.propTypes = {\n  filtered: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\nexport const MyList = styled.ul`\npadding: 0;\n    .contact {\n      margin-left: 20px;\n\n  display: flex;\n  align-items: center;\n  font-size: 15px;\n  font-weight: 400;\n  line-height: 1.18;\n  margin-bottom: 8px;\n}\n.buttonDelete {\n\n\n  margin-left: 10px;\n  border: 2px solid red;\n  font-size: 13px;\n  font-weight: 700;\n  border-radius: 4px;\n  background-color: #ffae00;\n  color: black;\n  cursor: pointer;\n}\n\n`","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { MyList } from \"./ContactsList.styled\";\n\nconst ContactsList = ({ contacts, deleteContact }) => {\n  return (\n    <MyList>\n      {contacts.map(({ name, number, id }) => (\n        <li className=\"contact\" key={id}>\n          <p>\n            {name}: {number}\n          </p>\n          <button\n            className=\"buttonDelete\"\n            type=\"button\"\n            onClick={() => deleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </MyList>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      number: PropTypes.string,\n      id: PropTypes.string,\n    })\n  ),\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import React, { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactsForm from \"./ContactsForm/ContactsForm\";\nimport Filter from \"./Filter/Filter\";\nimport ContactsList from \"./ContactsList/ContactsList\";\nimport data from \"./data\";\n\nexport default function App() {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(\"contacts\")) ?? data;\n  });\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const submitContact = ({ name, number }) => {\n    const addContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    contacts.find(\n      (contact) => contact.name.toLowerCase() === addContact.name.toLowerCase()\n    )\n      ? alert(`${name} is already in contacts`)\n      : setContacts((prevContacts) => [addContact, ...prevContacts]);\n  };\n\n  const deleteContact = (id) => {\n    setContacts((prev) => prev.filter((contact) => contact.id !== id));\n  };\n\n  const changeFilterInput = (e) => {\n    setFilter(e.target.value);\n  };\n\n  const onFilteredContacts = () => {\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactsForm onHandleSubmit={submitContact} />\n\n      <h2>Contacts</h2>\n      <Filter value={filter} filtered={changeFilterInput} />\n      <ContactsList\n        deleteContact={deleteContact}\n        contacts={onFilteredContacts()}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App.jsx';\n\nReactDOM.render(<App/>,document.getElementById('root'));\n"],"sourceRoot":""}